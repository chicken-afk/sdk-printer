function _0x2414() { const _0xe44ab1 = ['healthCheckInterval', 'json', '1085gIQngV', 'Failed\x20to\x20fetch\x20printers', 'print', 'append', 'checkConnection', 'Failed\x20to\x20fetch\x20paper\x20list', 'paperSize', '401271SqxxEm', 'Failed\x20to\x20print', '/printers', '356805mjErNy', 'error', '/papers', 'log', 'printerId', '4QeKqgu', '26729vUyoAz', '/print', '2072sXYbQu', 'signal', 'file', 'http://localhost:8971/api/v1', 'getPaper', '1238838VOgwAS', '3824282FeCsIc', '⚠️\x20Printer\x20SDK\x20belum\x20dijalankan.\x20Harap\x20buka\x20aplikasinya.', 'baseUrl', '568790KMXGQg', '14AaxtkR', '10xhgLOV', 'startHealthCheck', 'PrinterSDK']; _0x2414 = function () { return _0xe44ab1; }; return _0x2414(); } function _0x4fd2(_0x2bedfb, _0x561aba) { const _0x2414a1 = _0x2414(); return _0x4fd2 = function (_0x4fd280, _0x6b2da5) { _0x4fd280 = _0x4fd280 - 0x7d; let _0x4a6cbb = _0x2414a1[_0x4fd280]; return _0x4a6cbb; }, _0x4fd2(_0x2bedfb, _0x561aba); } const _0x9badcd = _0x4fd2; (function (_0x4eb80e, _0x431f98) { const _0x131f04 = _0x4fd2, _0xd9c882 = _0x4eb80e(); while (!![]) { try { const _0x47bca0 = parseInt(_0x131f04(0x88)) / 0x1 * (parseInt(_0x131f04(0x94)) / 0x2) + -parseInt(_0x131f04(0x7f)) / 0x3 + parseInt(_0x131f04(0x87)) / 0x4 * (parseInt(_0x131f04(0x93)) / 0x5) + parseInt(_0x131f04(0x8f)) / 0x6 + parseInt(_0x131f04(0x9a)) / 0x7 * (parseInt(_0x131f04(0x8a)) / 0x8) + parseInt(_0x131f04(0x82)) / 0x9 * (parseInt(_0x131f04(0x95)) / 0xa) + -parseInt(_0x131f04(0x90)) / 0xb; if (_0x47bca0 === _0x431f98) break; else _0xd9c882['push'](_0xd9c882['shift']()); } catch (_0x18925a) { _0xd9c882['push'](_0xd9c882['shift']()); } } }(_0x2414, 0x19ce9)); class PrinterSDK { constructor(_0xeed7a1) { const _0x7d20a1 = _0x4fd2; this['baseUrl'] = _0xeed7a1 || _0x7d20a1(0x8d), this['healthCheckInterval'] = null, this[_0x7d20a1(0x96)](); } async['checkConnection']() { const _0x108e86 = _0x4fd2; try { const _0x5354cf = new AbortController(), _0x36b80d = setTimeout(() => _0x5354cf['abort'](), 0xbb8), _0x773c21 = await fetch(this[_0x108e86(0x92)] + '/printers', { 'signal': _0x5354cf[_0x108e86(0x8b)] }); console[_0x108e86(0x85)](_0x773c21), clearTimeout(_0x36b80d); if (!_0x773c21['ok']) throw new Error('Health\x20check\x20failed'); return !![]; } catch (_0x395f0d) { return ![]; } } [_0x9badcd(0x96)]() { const _0x58d277 = _0x9badcd; if (this[_0x58d277(0x98)]) return; this[_0x58d277(0x98)] = setInterval(async () => { const _0x3ba7b7 = _0x58d277, _0x530e8f = await this[_0x3ba7b7(0x9e)](); !_0x530e8f && (alert(_0x3ba7b7(0x91)), clearInterval(this[_0x3ba7b7(0x98)]), this[_0x3ba7b7(0x98)] = null); }, 0x2710); } async['getPrinters']() { const _0xcd4bf4 = _0x9badcd, _0x14ea1f = await fetch(this[_0xcd4bf4(0x92)] + _0xcd4bf4(0x81)); if (!_0x14ea1f['ok']) throw new Error(_0xcd4bf4(0x9b)); return await _0x14ea1f['json'](); } async[_0x9badcd(0x8e)](_0x5327ee) { const _0x877eb9 = _0x9badcd, _0x16a25b = await fetch(this[_0x877eb9(0x92)] + '/printers/' + _0x5327ee + _0x877eb9(0x84)); if (!_0x16a25b['ok']) throw new Error(_0x877eb9(0x7d)); return await _0x16a25b[_0x877eb9(0x99)](); } async[_0x9badcd(0x9c)](_0x32f50e, _0xd8a4c6, _0x413610) { const _0x538dd8 = _0x9badcd, _0x1364c7 = new FormData(); _0x1364c7['append'](_0x538dd8(0x86), _0x32f50e), _0x1364c7[_0x538dd8(0x9d)](_0x538dd8(0x7e), _0xd8a4c6), _0x1364c7[_0x538dd8(0x9d)](_0x538dd8(0x8c), _0x413610); const _0x560fc7 = await fetch(this[_0x538dd8(0x92)] + _0x538dd8(0x89), { 'method': 'POST', 'body': _0x1364c7 }); if (!_0x560fc7['ok']) { const _0xc61c4f = await _0x560fc7[_0x538dd8(0x99)](); throw new Error(_0xc61c4f[_0x538dd8(0x83)] || _0x538dd8(0x80)); } return await _0x560fc7[_0x538dd8(0x99)](); } } window[_0x9badcd(0x97)] = PrinterSDK;